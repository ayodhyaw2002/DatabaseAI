#LLM connect
#LLm fine tune 

from schema_helper import get_all_schema
import google.generativeai as genai
import re

genai.configure(api_key="") #customized genai application
model=genai.GenerativeModel("gemini-2.0-flash")


#instruction to LLm generate sql query
 # Get the schema information
def build_prompt(user_question,schema):
    
    return f"""  
You are working with a Microsft SQL Server database.
all tables are under the dbo schema. Use full table names in SQL queries like dbo.Customer.
Database schema:
{schema}
You are an AI assistant that converts natural language into SQL server queries.

User question: {user_question}
Generate a SQL query that answers the user's question.Make sure to use the correct table and column names as per the schema provided.
Return **only** the SQL query, without any additional text or explanation.
"""


def ask_llm(user_question):
    
    #in here result is none why ?
    schema = get_all_schema()
    prompt = build_prompt(user_question, schema)
    
    if user_question is None or user_question.strip() == "":
        raise ValueError("User question cannot be empty.")
    
    
    #the sql query response from the LLM
    # print("Prompt sent to LLM:", prompt)
    response = model.generate_content(prompt)
    sql_query =response.text.strip()
    # print("SQL query generated by LLM:", sql_query)
    #if you not return the sql query it will not work
    return sql_query

def cleaned_Query(originalQ):
    convertedQ=originalQ.replace("```sql", "").replace("```", "").strip()
    # Fix SQL Server syntax if needed
    return convertedQ
    
    
    
    
  
  


      

